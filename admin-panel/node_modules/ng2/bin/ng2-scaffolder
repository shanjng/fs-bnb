#!/usr/bin/env node

/**
 *  Module dependencies.
 */

var cli = require('commander');
var path = require('path');
var pkg = require('../package.json');
var readdir = require('fs').readdirSync;
var version = pkg.version;
var colors = require('colors');
var utils = require('../lib/utils');
var log = utils.log;
var info = utils.info;
var error = utils.error;
var unique = require('lodash').unique;
var scaffold = require('../lib/scaffolder').scaffold;
var args = [].concat(process.argv).splice(2);

if(args[0] === '-h' || args[0] === '--help') {
  help();
  process.exit(0);
}
/*
 * cli
 */

cli
  .version(version)

cli.parse(process.argv);

if (!cli.args.length) help();

var template = cli.args.shift();

cli.args.forEach(function (name) {
  var moduleName = process.cwd().split(path.sep).pop();
  scaffold(moduleName, template, name);
  if(!/(test\.|view)/.test(template)) {
    scaffold(moduleName, 'test.unit.'+template, name);
  }
});

function help (){
  var logStruct = function (separator, command, description) {
    var tabs = '  ';
    log(tabs, separator, command);
    description && log(tabs, tabs, description);
  }
  log('Usage:');
  log();
  logStruct('$', 'ng2-scaffolder', 'Shows this help.');
  log();
  logStruct('$', 'ng2-scaffolder <template> <name>', 'Creates a file <name> using <template> as a base');
  log();
  logStruct('$', 'ng2-scaffolder controller navbar dropdowns another'
    , 'Creates the 3 controllers: navbar, dropdowns, and another');
  log();
  log();
  log('Available templates:');
  var templates = readdir(path.resolve(__dirname,'../lib/templates'));
  templates.forEach(function (t) {
    if(/^\./.test(t) || /index/.test(t) || /component/.test(t)) return;
    t = t.split('.')
    t.pop();
    t = t.join('.');
    logStruct('*', t);
  });
  log();
  process.exit(0);
};
